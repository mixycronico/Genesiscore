# .github/workflows/ci.yml
# Workflow de GitHub Actions para CoreC v4: configura el entorno, instala dependencias y ejecuta pruebas unitarias.

name: CoreC v4 CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Setup and Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: corec_db
          POSTGRES_USER: corec_user
          POSTGRES_PASSWORD: secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inspect directory structure
        run: |
          pwd
          ls -R

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Install pipdeptree
        run: |
          python -m pip install --no-cache-dir pipdeptree

      - name: Install Python dependencies
        run: |
          cd corec_v4
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Check installed dependencies
        run: |
          cd corec_v4
          pipdeptree

      - name: Set up environment variables
        run: |
          cd corec_v4
          echo "PYTHONPATH=$(pwd):$(pwd)/src" >> $GITHUB_ENV
          echo "OPENROUTER_API_KEY=dummy_key" >> $GITHUB_ENV

      - name: Inspect PYTHONPATH
        run: |
          cd corec_v4
          echo "PYTHONPATH: $PYTHONPATH"
          python -c "import sys; print(sys.path)"

      - name: Initialize PostgreSQL databases
        env:
          PGHOST: localhost
          PGUSER: corec_user
          PGPASSWORD: secure_password
        run: |
          cd corec_v4
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE user_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE cli_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE alert_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE settlement_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE capital_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE execution_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE macro_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE exchange_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE monitor_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE predictor_db;"
          psql -h localhost -U corec_user -d postgres -c "CREATE DATABASE analyzer_db;"
          psql -h localhost -U corec_user -d user_db -f configs/plugins/user_management/schema.sql
          psql -h localhost -U corec_user -d cli_db -f configs/plugins/cli_manager/schema.sql
          psql -h localhost -U corec_user -d alert_db -f configs/plugins/alert_manager/schema.sql
          psql -h localhost -U corec_user -d settlement_db -f configs/plugins/daily_settlement/schema.sql
          psql -h localhost -U corec_user -d capital_db -f configs/plugins/capital_pool/schema.sql
          psql -h localhost -U corec_user -d execution_db -f configs/plugins/trading_execution/schema.sql
          psql -h localhost -U corec_user -d macro_db -f configs/plugins/macro_sync/schema.sql
          psql -h localhost -U corec_user -d exchange_db -f configs/plugins/exchange_sync/schema.sql
          psql -h localhost -U corec_user -d monitor_db -f configs/plugins/market_monitor/schema.sql
          psql -h localhost -U corec_user -d predictor_db -f configs/plugins/predictor_temporal/schema.sql
          psql -h localhost -U corec_user -d analyzer_db -f configs/plugins/system_analyzer/schema.sql

      - name: Run tests
        run: |
          cd corec_v4
          pytest -v

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: corec_v4/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
